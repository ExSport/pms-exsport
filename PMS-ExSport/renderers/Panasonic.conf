#------------------------------------------------------------
# ps3mediaserver profile for ps3
# DO NOT MODIFY THIS (OR AT YOUR OWN RISK)

#------------------------------------------------------------
# General informations / detection

RendererName=Panasonic MIL
RendererIcon=kuro.png

#UserAgent: regular expression to detect the connected renderer
UserAgentSearch=Panasonic MIL DLNA

#UserAgentAdditionalHeaders: additional http header for better detection
#UserAgentAdditionalHeader=X-PANASONIC-DMP-Profile
#UserAgentAdditionalHeaderSearch=

#Basic capabilities
Video=true
Audio=true
Image=true

#------------------------------------------------------------
# DLNA settings

#Use the DLNA feature seek by time and not by range
SeekByTime=false

# CBR bitrate. Needed for byteseek to timeseek convertion. 0 = disabled.
CBRVideoBitrate=15000

# Number of seconds to rewind every time we do a byteseek to timeseek conversion.
# If the conversion isn't 100% accurate so a little rewind can be nice
ByteToTimeseekRewindSeconds=0

#Serve different flavors of localization in the DLNA parameters (PAL/NTSC, NA/EU/JP)
#to allow every worldwide renderer to see the files. Important for Sony Bravia's TVs
DLNALocalizationRequired=true

#------------------------------------------------------------
# Transcoding/Muxing capabilities
#

#Transcode codecs for video and audio engines
#currently supported: MPEGAC3, MPEGTSAC3 or WMV for video, PCM or MP3 for audio
TranscodeVideo=MPEGAC3
TranscodeAudio=LPCM

#Use default DVD buffer size: false = greater bitrate and faster encoding,
#but can generate incompatible videos, depends of your media renderer
DefaultVBVBufSize=true

#Muxing capabilities: Does the media renderer supports H264 and MPEG2 in a mpegts file ?
#Deprecated if MediaInfo=true
MuxH264ToMpegTS=true

#Does the media renderer supports DTS in a mpeg file ?
#Deprecated if MediaInfo=true
MuxDTSToMpeg=false

#Does the media renderer supports DTS wrapped into LPCM in a mpeg file ?
WrapDTSIntoPCM=false

#Does the media renderer supports LPCM in a mpeg file ?
#Deprecated if MediaInfo=true
MuxLPCMToMpeg=true

#Maximum bitrate supported by the media renderer (0=unlimited)
MaxVideoBitrateMbps=90

#Max Width and Height supported by the media renderer (0=unlimited)
MaxVideoWidth=1920
MaxVideoHeight=1080

#Does the media renderer supports only H264 L4.1 at most ?
H264Level41Limited=true

#Does music files need to be resampled at 44.1kHz?
TranscodeAudioTo441kHz=false

#Does the client need to receive transcoded video with minimal delay ? (Useful when the client has a small timeout delay)
TranscodeFastStart=true

#Size of the transcoded file (unknown length) sent to the renderer (could determine browsing failure/success)
#Possible values: 
#           -1: Specific value working with the PS3, means perfect transcoding and copying support (it's against the dlna spec though)
#            0: size attribute is NOT sent to the renderer (defaut value if this parameter isn't used)
# 100000000000: 100Gb, if you want to be sure that the media file is not cutted before the end ?
TranscodedVideoFileSize=0

#-----------------------------------------------------------
# Misc Images

#Rotate Jpeg files based on EXIF infos
AutoExifRotate=false

#------------------------------------------------------------
# Misc Files

## If you want to apply a specific extension for your transcoded files:
#UseSameExtension=mpg

# Mime types transforms (oldmime=newmime|olemime2=newmime2|...)
# Deprecated if MediaInfo=true
#MimeTypesChanges=audio/wav=audio/L16|video/mp4=video/mpeg|video/mkv=video/mpeg

# What extensions are forcefully transcoded
# Don't use this if MediaInfo=true, prefer codec configurations
TranscodeExtensions=
# What extensions are forcefully streamed as is (and not transcoded)
# Don't use this if MediaInfo=true, prefer codec configurations
StreamExtensions=

SoftSubSupport=false
CustomMencoderQualitySettings=keyint=5:vqscale=1:vqmin=3:vqmax=5
CustomMencoderOptions=-vf softskip,expand=::::1:16\/9:2

#container: avchd, divx, mpeg2
#ext: divx,avi, mpg, mpeg
#vid.kodek: DIV3, DIV4, DIVX, DX50, DIV6, MPEG-2(PS)
#aud.kodek: mp3, mpeg, ac3
#GMC not supported
#titulky: microdvd, subrip (musi byt stejny nazev)...zobrazeniv poradi SRT, SUB, TXT
#obrazky: jpg,jpeg 4:4:4, 4:2:2, 4:2:0


# ===========================================================================
# All supported media formats of this renderer (the rest will be transcoded)
# First steps towards a faster/proper file/codec/mimetype management system (false by default)
# 1- Parse files with mediainfo on Windows/OSX (Linux too if libmediainfo and libzen installed)
# 2- Deprecate following parameters: MuxH264ToMpegTS,MuxDTSToMpeg,MuxLPCMToMpeg,MimeTypesChanges
# 3- The server will skip badly parsed, corrupted files or wrong coding, preventing potential playback errors
# 4- Faster browsing, due to the launch of ffmpeg/mplayer first thumbnailer process with each http client request, rather than in the browse DLNA request
MediaInfo=true
# The media parser and this configuration file will recognize the following formats/codecs (lowercase only, regex supported):
# Chosen from the most common used and supported formats/codecs (no need to manage ADPCM, nobody cares)
#        mpegps		(mpeg presentation stream, used in DVD Videos, VCDs, etc.)
#        mpegts		(mpeg transport stream, used in sat tv, blu rays, etc.)
#        wmv		(Windows Media Video, tag also used for asf files)
#        avi		(AVI container)
#        mp4		(ISOM/MPEG4 container, or MPEG4 codec)
#        mov		(Quicktime container, Apple)
#        flv		(Flash Video)
#        rm			(Real Media, RMVB)
#        mkv		(Matroska)
#        wav		(WAVE file)
#        wavpac		(WavPack)
#        lpcm		(Linear PCM)
#        aac		(Advanced Audio Codec)
#        ac3		(Audio Coding 3)
#        mp3		(Mpeg Audio Layer 3)
#        mpa		(Mpeg Audio)
#        ogg		(Ogg Vorbis)
#        wma		(Windows Media Audio)
#        dts		(Digital Theater Systems)
#        dtshd		(Digital Theater Systems)
#        truehd		(TrueHD)
#        eac3		(Extended AC3)
#        atrac		(Atrac)
#        flac		(Free Lossless Audio Codec)
#        ape		(Monkey's Audio)
#        ra			(Real Audio)
#        mpc		(MusePack)
#        aiff		(AIFF)
#        alac		(Apple Lossless)
#        dv			(Digital Video)
#        mpeg1		(Codec used in VCD)
#        mpeg2		(Codec used in DVD Videos and HDTV)
#        divx		(DivX Video)
#        h264		(H264)
#        mjpeg		(M-JPEG)
#        vc1		(VC-1)
#        jpg		(Jpeg)
#        png		(PNG)
#        gif		(GIF)
#        tiff		(TIFF)
#        bmp		(Bitmap)
#        und		(Undetermined, if the parser did not recognize one of above)
# Usage:
#    f: format, MANDATORY (the only conf for a 'eat everything' renderer would be f:.+)
#    m: mimetype, STRONGLY RECOMMENDED (if not declared, an estimated value is assigned)
#    v: video codec
#    a: audio codec
#    n: max nb of audio channels
#    s: max audio sample frequency in Hz
#    b: max audio bitrate in bps
#    w: max width in pixels
#    h: max height in pixels
#    other flags: right now, only qpel and gmc (see avi)

# In case of multiple matches, the first mime type of the list is the used one.
# Be careful with regexps such as .+ : You shouldn't use these only if you're sure your renderer is quite versatile

# Taken from the playstation site:
#    The following types of files can be played under  (Video).
#    Memory Stick Video Format
#    - MPEG-4 SP (AAC LC)
#    - H.264/MPEG-4 AVC High Profile (AAC LC)
#    - MPEG-2 TS(H.264/MPEG-4 AVC, AAC LC)
#    MP4 file format
#    - H.264/MPEG-4 AVC High Profile (AAC LC)
#    MPEG-1 (MPEG Audio Layer 2)
#    MPEG-2 PS (MPEG2 Audio Layer 2, AAC LC, AC3(Dolby Digital), LPCM)
#    MPEG-2 TS (MPEG2 Audio Layer 2, AC3(Dolby Digital), AAC LC)
#    MPEG-2 TS (H.264/MPEG-4 AVC, AAC LC)
#    AVI
#    - Motion JPEG (Linear PCM)
#    - Motion JPEG (mu-Law)
#    AVCHD (.m2ts / .mts)
#    DivX
#    WMV
#    - VC-1(WMA Standard V2)
#
# gives:

# [Supported video formats]: 
# Here we declare support (or lack) of DTS (here, none of the entries declare dts as a supported audio codec) 

Supported = f:mpegps|mpegts    v:mpeg1|mpeg2|mp4|h264    a:ac3|lpcm|aac|mpa	m:video/mpeg

# No H264 for AVI files, plus specific mediainfo attributes, for better auto detection (qpel and gmc are not supported here)
Supported = f:avi|divx    v:mp4|divx|mjpeg	a:mp3|lpcm|mpa|ac3	m:video/x-divx	qpel:no	gmc:0
Supported = f:mp4    v:mp4|h264	a:ac3|aac	m:video/mp4
# WMV files are supported, but not with 5.1 audio: (hence the n:2)
Supported = f:wmv    v:wmv|vc1	a:wma	n:2	m:video/x-ms-wmv

# [Supported audio formats]:
Supported = f:lpcm  m:audio/L16
Supported = f:wav	a:dts|lpcm	n:6	s:48000	m:audio/wav
Supported = f:wav	n:2	s:48000	m:audio/wav
Supported = f:mp3	n:2	m:audio/mpeg
# Apple lossless not supported
Supported = f:aac	n:2	a:(?!alac).+	m:audio/x-m4a
Supported = f:wma	n:2	m:audio/x-ms-wma
Supported = f:atrac	n:2	m:audio/x-oma

# [Supported image formats]
Supported = f:jpg	m:image/jpeg
Supported = f:png	m:image/png
Supported = f:gif	m:image/gif
Supported = f:tiff	m:image/tiff

# ===========================================================================

## WHAT TV SUPPORTS? (retrieved from manual)
#--------------------------------------------
# container: avchd, divx, mpeg2,...
# extensions: divx,avi, mpg, mpeg,wmv, ...
# video codec: DIV3, DIV4, DIVX, DX50, DIV6, MPEG-2(PS/TS)
# audio codec: mp3, mpeg, ac3
# GMC not supported
# subtitles: microdvd, subrip (subtitles name must be same)...priority when same name: SRT, SUB, TXT
# pictures: jpg, jpeg 4:4:4, 4:2:2, 4:2:0

# VIERA Image Viewer:	Ano (AVCHD/SD-VIDEO/DivXHD/JPEG/MP3/AAC playback)

## What was found about renderer in debug.log
#---------------------------------------------

# Received on socket: User-Agent: Panasonic MIL DLNA CP UPnP/1.0
# Received on socket: X-PANASONIC-DMP-Profile: MPEG_PS_PAL JPEG_SM PV_DIVX_DIV3 PV_DIVX_DIV4 PV_DIVX_DIVX PV_DIVX_DX50 PV_DRM_DIVX_DIV3 PV_DRM_DIVX_DIV4 PV_DRM_DIVX_DIVX PV_DRM_DIVX_DX50
# Received on socket: X-PANASONIC-Registration: VklFUkEAAAAAAAAAAAAAAAAAAAAAAAAAAAA=

#RendererName=Panasonic MIL
#RendererIcon=unknown.png
#UserAgentSearch=Panasonic MIL DLNA
#UserAgentAdditionalHeader=X-PANASONIC-DMP-Profile
#Video=true
#Audio=true
#Image=true
#SeekByTime=false
#DLNALocalizationRequired=true
#TranscodeVideo=MPEGAC3
#TranscodeAudio=PCM
#DefaultVBVBufSize=true
#MuxH264ToMpegTS=true
#MuxDTSToMpeg=false
#WrapDTSIntoPCM=false
#MuxLPCMToMpeg=true
#MaxVideoBitrateMbps=80
#MaxVideoWidth=0
#MaxVideoHeight=0
#H264Level41Limited=true
#TranscodeAudioTo441kHz=false
#TranscodeFastStart=true
#TranscodedVideoFileSize=0
#AutoExifRotate=true
#MimeTypesChanges=audio/wav=audio/L16|video/mp4=video/mpeg|video/mkv=video/mpeg
#TranscodeExtensions=
#StreamExtensions=

#I tested 4 combinations:
#- SeekByTime = true
#- SeekByTime = false
#- TranscodedVideoFileSize=100000000000
#- TranscodedVideoFileSize=0
#Results:
#When SeekByTime=false and TranscodedVideoFileSize=0, transcoded file has no info about actual time(total time is visible) and seeking is somehow/sometimes possible.
#When 99GB is set, I can see actual time but when seeking, time is visible but immediately freeze and TV will show corrupted data or movie starts from begining or from point where I started to seek.
#When SeekByTime=true, PMS generates exceptions and movie starts from beginning always when I use seeking. It seems that TV maybe doesn't support seeking by time, but why PMS generates exceptions?  
#When I tried TranscodedVideoFileSize=-1, seeking will start movie from beginning every time.
#When TranscodedVideoFileSize is defined to something about 1GB, I can see actual time but seeking is working only for some minutes/seconds to forward. It means I can seek forward for few seconds but not more because it seems PMS will send end of file and streaming will freeze/file cannot be played.
#When I set 10GB, behavior is same as for 99GB(mayble some TV limit about maximum size of file???)
#Shagrath, please it is somehow possible to make it work? With help of conf file and attached debug.logs so maybe some tweaks in PMS itself plus tweaking .conf file will make it work(seeking+actual time visible so we will know where we are now when playing and where we are when forwarding so we can stop or continue in rewinding)?

